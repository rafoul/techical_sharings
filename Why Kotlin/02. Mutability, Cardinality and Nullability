## 02. Mutability, Cardinality and Nullability
#### Mutability
The compiler is able to do optimizations for immutable variables, in the world of system programming language. Refer to the following link for details, https://people.freebsd.org/~lstewart/articles/cpumemory.pdf

For interpreted language like Java, it`s about being explicit, so that your program can be easier to reason about. You never have to think twice about what the value will be at runtime if it is immutable.

By default it is immutable.

#### Cardinality
- Singleton: the simplest case.
- Enum: personally I would recommend use it whenever possible.
- Nested class: declare your class hierarchy in a enum fasion.

#### Nullability
It DOES NOT eliminate NPE for you automatically.
It DOES provides a way for you to avoid NPE at compile time, so that you can be less often surprised at runtime.







